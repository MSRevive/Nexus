name: create release
on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@master
      - name: setup .NET core SDK
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: 5.0.x
      - name: install dependencies
        run: dotnet restore
      - name: test
        run: dotnet test --no-restore --verbosity normal
      - name: install netcorebeauty
        run: dotnet tool install --global nulastudio.ncbeauty
      - name: publish
        run: dotnet publish --framework netcoreapp3.1 --runtime linux-x64 -c Release -o msnexus-linux-x64
      - name: beautify
        run: ncbeauty "hostfxr;hostpolicy;*.deps.json;*.runtimeconfig*.json" /publish libraries "dll1.dll;lib*;..."
      - name: extract changelog
        env:
          REF: ${{ github.ref }}
        run: sed -n "/^## ${REF:10}/,/^## /{/^## /b;p}" CHANGELOG.md > ./RELEASE_CHANGELOG
      - name: tar release
        run: tar -czvf ~/msnexus.tar.gz msnexus-linux-x64
      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body_path: ./RELEASE_CHANGELOG
          draft: true
          prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') || contains(github.ref, 'rc') }}
      - name: upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/msnexus.tar.gz
          asset_name: msnexus.tar.gz
          asset_content_type: application/octet-stream
